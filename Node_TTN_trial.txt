// Include the SX1272 and SPI library: 
#include "SX1272.h"
#include <SPI.h>

int e;

char message1 [] = "Packet 1, wanting to see if received packet is the same as sent packet";
char message2 [] = "Packet 2, broadcast test";

void setup() 
{
  // put your setup code here, to run once:
  // Open serial communications and wait for port to open:
  Serial.begin(9600); //Serial1.begin(57600);
  
  // Print a start message
  Serial.println(F("SX1272 module and Arduino: send packets with ACK and retries"));
  
  // Power ON the module
  e = sx1272.ON();
  Serial.print(F("Setting power ON: state "));
  Serial.println(e, DEC);
  
  // Set transmission mode and print the result
  e = sx1272.setMode(4);
  Serial.print(F("Setting Mode: state "));
  Serial.println(e, DEC);
  
  // Set header
  e = sx1272.setHeaderON();
  Serial.print(F("Setting Header ON: state "));
  Serial.println(e, DEC);
  
  // Select frequency channel
  e = sx1272.setChannel(CH_10_868);
  Serial.print(F("Setting Channel: state "));
  Serial.println(e, DEC);
  
  // Set CRC
  e = sx1272.setCRC_ON();
  Serial.print(F("Setting CRC ON: state "));
  Serial.println(e, DEC);
  
  // Select output power (Max, High or Low)
  e = sx1272.setPower('H');
  Serial.print(F("Setting Power: state "));
  Serial.println(e, DEC);
  
  // Set the node address and print the result
  e = sx1272.setNodeAddress(3);
  Serial.print(F("Setting node address: state "));
  Serial.println(e, DEC);
  
  // Print a success message
  Serial.println(F("SX1272 successfully configured"));
  Serial.println();
  
  //Get DevUEI(MAC-address)
  Serial.write("sys get hweu\r\n");
  delay(1000);
  while(Serial.available())Serial.write(Serial.read());

  //Get DevAddr(Device-address)
  Serial.write("mac set devaddr networkaddress\r\n");
  delay(1000);
  while(Serial.available())Serial.write(Serial.read());

  //Get NwkSKey(Network Session Key)
  Serial.write("mac set Nwkskey ????????????????????????????????\r\n");
  delay(1000);
  while(Serial.available())Serial.write(Serial.read());

  //Get AppSKey(Application Session Key)
  Serial.write("mac set Appskey ????????????????????????????????\r\n");
  delay(1000);
  while(Serial.available())Serial.write(Serial.read());
}

void loop(void) 
{
  // put your main code here, to run repeatedly:
  // Send message1 and print the result
  e = sx1272.sendPacketTimeoutACKRetries(8, message1);
  Serial.print(F("Packet sent, state "));
  Serial.println(e, DEC);

  delay(4000);  

  // Send message2 broadcast and print the result
  e = sx1272.sendPacketTimeoutACKRetries(0, message2);
  Serial.print(F("Packet sent, state "));
  Serial.println(e, DEC);

  delay(4000);  
}